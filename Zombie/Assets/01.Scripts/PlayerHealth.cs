using UnityEngine;
using UnityEngine.UI;

public class PlayerHealth : LivingEntity
    //플레이어 캐릭터의 생명체로서의 동작을 담당
{
    public Slider healthSlider; //체력을 표시할 UI 슬라이더

    public AudioClip deathClip; //사망 소리
    public AudioClip hitClip; //피격 소리
    public AudioClip itemPickupClip; //아이템 습득 소리

    private AudioSource playerAudioPlayer; //플레이어 소리 재생기
    private Animator playerAnimator; //플레이어 애니메이터

    private PlayerMovement playerMovement; //플레이어 움직임 컴포넌트
    private PlayerShooter playerShooter; //플레이어 슈터 컴포넌트

    private void Awake() 
        //사용할 컴포넌트 가져오기
    {
        playerAnimator = GetComponent<Animator>();
        playerAudioPlayer = GetComponent<AudioSource>();

        playerMovement = GetComponent<PlayerMovement>();
        playerShooter = GetComponent<PlayerShooter>();
    }

    protected override void OnEnable() 
        //LivingEntity의 OnEnable()실행,상태 초기화
    {
        base.OnEnable();

        healthSlider.gameObject.SetActive(true);
        //체력 슬라이더 활성화
        healthSlider.maxValue = startingHealth;
        //체력 슬라이더의 최댓값을 기본 체력값으로 변경
        healthSlider.value = health;
        //체력 슬라이더의 값을 현재 체력값으로 변경

        playerMovement.enabled = true;
        playerShooter.enabled = true;
        //플레이어 조작을 받는 컴포넌트 활성화
    }

    public override void RestoreHealth(float newHealth)
        //체력 회복
        //LivingEntity의 RestoreHealth()실행, 체력 증가
    {
        base.RestoreHealth(newHealth);

        healthSlider.value = health;
        //갱신된 체력으로 체력 슬라이더 갱신
    }

    public override void OnDamage(float damage, Vector3 hitPoint, Vector3 hitDirection)
        //대미지 처리
        //LivingEntity의 OnDamage()실행, 대미지 적용
    {
        if (!dead) //사망하지 않은 경우에만 효과음 재생
        {
            playerAudioPlayer.PlayOneShot(hitClip);
        }

        //if (dead) return;
        
        base.OnDamage(damage, hitPoint, hitDirection);

        healthSlider.value = health; //갱신된 체력을 체력 슬라이더에 반영

    }

    public override void Die()
        //사망처리
        //LivingEntity의 Die()실행, 사망 적용
    {
        base.Die();

        healthSlider.gameObject.SetActive(false); //체력 슬라이더 비활성화
                                                  //(SetActive = 오브젝트 활성비활성화)
                                                  //(enabled = 컴포넌트 활성비활성화)

        playerAudioPlayer.PlayOneShot(deathClip); //사망음 재생
        playerAnimator.SetTrigger("Die"); //애니메이터의 Die 트리거를 발동시켜 사망 애니메이션 재생

        playerMovement.enabled = false;
        playerShooter.enabled = false;
        //플레이어 조작을 받는 컴포넌트 비활성활
    }

    private void OnTriggerEnter(Collider other)
        //아이템과 충돌한 경우 해당 아이템을 사용하는 처리
    {
        if(!dead)
        {
            IItem item = other.GetComponent<IItem>();
            //충돌한 상대방으로부터 IItem 컴포넌트 가져오기 시도

            if (item != null)
            //충돌한 상대방으로부터 IItem 컴포넌트를 가져오는 데 성공했다면
            {
                item.Use(gameObject); //Use 메서드를 실행하여 아이템 사용
                playerAudioPlayer.PlayOneShot(itemPickupClip); //아이템 습득 소리 재생*
            }
        }
    }
}
//다형성 : 부모를 상속받은 자식이 부모타입으로도 취급 가능